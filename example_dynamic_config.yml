Updater:
  update_inter: 150
  verbosity: INFO
  percent_resolution: 10000

database:
  url: "postgresql+asyncpg://charli3:charli3@pgbouncer:6432/node-operator-backend?prepared_statement_cache_size=0"

NodeSync:
  api_url: "http://charli3-node-sync-api:3000"

ChainQuery:
  network: MAINNET
  ogmios:
    ws_url: ws://10.128.0.3:1337
    kupo_url: http://10.128.0.3:1442
  external:
    ogmios:
      ws_url: ws://mainnet-ogmios-host:1337
      kupo_url: http://mainnet-kupo-host:1442
    # You may use Blockfrost instead of Ogmios, but we strongly recommend self-hosted Ogmios/Kupo.
    # blockfrost:
    #   project_id: your-mainnet-blockfrost-project-id

Alerts:
  cooldown: 1800 # 30 minutes (Optional)
  thresholds: # (Optional)
    c3_token_balance: 1000 # in ADA format
    ada_balance: 500 # in ADA
    timeout_variance: 105 # 5% variance
    minimum_data_sources: 3
  notifications: # at least one notification is required
    - type: slack
      config:
        webhook_url: "{tokenA}/{tokenB}/{tokenC}" # from https://hooks.slack.com/services/{tokenA}/{tokenB}/{tokenC}
    - type: discord
      config:
        webhook_url: "{WebhookID}/{WebhookToken}" # from Discord webhook https://discordapp.com/api/webhooks/{WebhookID}/{WebhookToken}
    - type: telegram
      config: # need to create a bot and get the token from BotFather
        bot_token: your_bot_token
        chat_id: your_chat_id

RewardCollection:
  destination_address: "addr1q9evg963x3rwxu8fk9qv7e7t9v509xh94nphuhtzngflq3hc54jdzk6qyr8dru552quaxkwar5rzngryqxt33j7ul3xs6rxa04" # Address to collect rewards
  trigger_amount: 1000 # 1000 C3 tokens

# Populate the mnemonics for each feed OR leave blank when using signing/verification keys.
mnemonic_ada_charli3:
mnemonic_ada_euro:
mnemonic_ada_chf:
mnemonic_ada_usd:
mnemonic_book_usd:
mnemonic_djed_usd:
mnemonic_iusd_usd:
mnemonic_mehen_usd:
mnemonic_newm_usd:
mnemonic_nmkr_ada:
mnemonic_shen_usd:
mnemonic_copi_usd:
mnemonic_eth_usd:
mnemonic_btc_ada:
